logdir: logs/pytorch-gen
gpus: [0]

# define model
model:
  architecture: Unet
  init_params:
    encoder_name: resnet34
    encoder_weights: imagenet
    classes: 1
    activation: sigmoid

data:

  # datasets
  train_dataset:
    name: SegmentationDataset
    init_params:
      images_dir: ./data/preprocessed/train/images
      masks_dir: ./data/preprocessed/train/masks
      transform_name: train_transform

  valid_dataset:
    name: SegmentationDataset
    init_params:
      images_dir: ./data/preprocessed/validation/images
      masks_dir: ./data/preprocessed/validation/masks
      transform_name: post_transform

  # loaders
  train_dataloader:
    batch_size: 1
    shuffle: true
    drop_last: true
    pin_memory: true
    num_workers: 0

  valid_dataloader:
    batch_size: 2
    shuffle: false
    drop_last: false
    pin_memory: true
    num_workers: 0

training:

  losses:
    mask:
      name: DiceLoss
      init_params:

  metrics:
    mask:
      - name: MicroIoU
        init_params:
      - name: DiceCoef
        init_params:
      - name: IoU
        init_params:

  optimizer:
    name: Adam
    init_params:
      lr: 0.0001

  scheduler:
    name: PolyLR
    init_params:
      epochs: 50

  fit:
    epochs: 50
    accumulation_steps: 4
    verbose: true

prediction:
    # Source path using inside docker filesystem path
    epoch: